# Command to build image:
# docker builder prune
# docker build -t frontend-nuxt-prod -f .\dockerfile.prod .

# More Information:
# docker build -t frontend-nuxt-prod -f .\dockerfile.prod . --progress=plain

# Run container:
# docker run -d --restart=always --name frontend-nuxt-prod -p 3000:3000 frontend-nuxt-prod

# Export image:
# docker save frontend-nuxt-prod | gzip > frontend-nuxt-prod.tar.gz

ARG BASE_URL_ARG='http://localhost:8000'
ARG STUN_SERVER_URL_ARG='stun:stun.l.google.com:19302'
ARG HOST_ARG='0.0.0.0'
ARG PORT_ARG=3000

FROM node:20.4-slim as base

ENV NODE_ENV=production

# Build
FROM base as build

RUN npm i -g npm@9.8.0

WORKDIR /src

COPY --link package.json .
COPY --link package-lock.json .

RUN npm install 

COPY --link . .

RUN npm run build
RUN npm prune

# Run
FROM base
# Renewing of ARGs is necessary to use them in this stage
ARG BASE_URL_ARG
ARG STUN_SERVER_URL_ARG
ARG HOST_ARG
ARG PORT_ARG

ENV NUXT_PUBLIC_BASE_URL=${BASE_URL_ARG}
ENV NUXT_PUBLIC_STUN_SERVER_URL=${STUN_SERVER_URL_ARG}
ENV HOST=${HOST_ARG}
ENV PORT=${PORT_ARG}

EXPOSE ${PORT_ARG}

COPY --from=build /src/.output /src/.output

CMD [ "node", "src/.output/server/index.mjs" ]
